* 简介
** 定义
 * 在定义接口和类的时候使用类型参数
 * 声明的类型参数在使用时用具体的类型来替代
** 解决问题
 * 解决集合类框架在使用过程中通常会出现的运行时错误
 * 在编译时就可发现错误
* 类型擦除(type erasure)
** 描述
 * 生成的字节码中不含泛型中的类型信息
 * 使用泛型时加上的类型参数会被编译器去掉
** 特性
 * 没有独有的Class类
 * 静态变量是被泛型类的所有实例共享的
 * 泛型的类型参数不能用在java异常处理的catch语句中
** 过程
 * 找到用来替换类型参数的具体类
 * 把代码中的类型参数都替换成具体的类
 * 去掉出现的类型声明
** 通配符与上下界
 - 

* 泛型程序设计
** 优点
 - 可以被很多不同类型的对象重用
 - 引入类型参数来解决强制类型转换的问题
** 泛型类定义
*** 简介
**** 具有一个或多个类型变量的类
**** 例子
       	#+BEGIN_SRC java
       	 public class Pair<T>{
       	   private T name;
       	   private T getName(){
              return this.name; 
       	   }
       	 }
       	#+END_SRC
**** 一般约定
 - E 集合
 - K 关键字
 - V 值
 - T 任意类型
** 泛型方法
** 泛型变量的定义
** 泛型代码和虚拟机
** 约束和局限性
** 继承规则
** 通配符类型
** 反射和类型 
