* 一般技术
** 参数的传递方式
 值传递而非引用传递
** 对不变的数据或引用使用final
** 缺省情况下非静态函数都可被重写
** 数组的正确使用
 - array和vector使用
   vector只能存放对象
** polymorphism优于instanceof
** 如果不再需要对象引用,则要将其设置为null
* 对象的相等性
** reference类型与primitive的区别
 - 引用类型在栈中存放的是对象的引用地址
 - 基本类型在栈中存放的是实际的值
** ==与equals()
 - ==比较基本类型
 - equals比较引用类型
** 不要依赖与equals的默认实现
 - 根据需要重写equals方法
** 实现equals之前必须深思熟虑
** 优先使用getClass()
 - 对象属于相同类才相当
** 调用super.equals()以唤起base class的相关行为

